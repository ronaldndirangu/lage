"use strict";(self.webpackChunktest_website=self.webpackChunktest_website||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introducing Lage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/lage/docs/Introducing Lage/Overview","docId":"Introducing Lage/Overview"}]},{"type":"category","label":"Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting Started","href":"/lage/docs/Guide/getting-started","docId":"Guide/getting-started"},{"type":"link","label":"How does `lage` work?","href":"/lage/docs/Guide/levels","docId":"Guide/levels"},{"type":"link","label":"Scoped builds","href":"/lage/docs/Guide/scopes","docId":"Guide/scopes"},{"type":"link","label":"Caching","href":"/lage/docs/Guide/cache","docId":"Guide/cache"},{"type":"link","label":"Remote Cache","href":"/lage/docs/Guide/remote-cache","docId":"Guide/remote-cache"},{"type":"link","label":"Pipeline","href":"/lage/docs/Guide/pipeline","docId":"Guide/pipeline"},{"type":"link","label":"Profiling `lage`","href":"/lage/docs/Guide/profile","docId":"Guide/profile"},{"type":"link","label":"Priorities","href":"/lage/docs/Guide/priority","docId":"Guide/priority"},{"type":"link","label":"Configuration","href":"/lage/docs/Guide/config","docId":"Guide/config"},{"type":"link","label":"CLI usage","href":"/lage/docs/Guide/cli","docId":"Guide/cli"},{"type":"link","label":"Migration Guide","href":"/lage/docs/Guide/migration","docId":"Guide/migration"}],"href":"/lage/docs/Guide/"},{"type":"category","label":"Contributing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Contributing to Lage","href":"/lage/docs/Contributing/contribution-guide","docId":"Contributing/contribution-guide"}]}]},"docs":{"Contributing/contribution-guide":{"id":"Contributing/contribution-guide","title":"Contributing to Lage","description":"This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.","sidebar":"tutorialSidebar"},"Guide/cache":{"id":"Guide/cache","title":"Caching","description":"lage by default will cache tasks that it has already done recently locally on disk. As long as the source file and the command arguments have not changed, those cached results will be restored.","sidebar":"tutorialSidebar"},"Guide/cli":{"id":"Guide/cli","title":"CLI usage","description":"lage is meant to be run as a CLI. After installing lage inside the repository or globally, you can run the npm scripts from your repository like this:","sidebar":"tutorialSidebar"},"Guide/config":{"id":"Guide/config","title":"Configuration","description":"Configuration is provided by Cosmiconfig, so lage configuration is very flexible! We recommend the use of a lage.config.js because it is both concise and flexible.","sidebar":"tutorialSidebar"},"Guide/getting-started":{"id":"Guide/getting-started","title":"Getting Started","description":"Getting started with lage is quite easy! There are 2 ways to do this: automated or manual","sidebar":"tutorialSidebar"},"Guide/levels":{"id":"Guide/levels","title":"How does `lage` work?","description":"So how does lage make builds faster? To fully appreciate how lage gives you the best build performance compared to other monorepo task runners, take a look at this example. Here we have a repo with this dependency graph:","sidebar":"tutorialSidebar"},"Guide/migration":{"id":"Guide/migration","title":"Migration Guide","description":"v0.x.y -> v1.0.0","sidebar":"tutorialSidebar"},"Guide/pipeline":{"id":"Guide/pipeline","title":"Pipeline","description":"In the traditional monorepo task runners, like lerna, each npm lifecycle script like build or test is run topologically or in parallel individually. Depending on the graph of the packages, CPU cores are left idle wasting developer time.","sidebar":"tutorialSidebar"},"Guide/priority":{"id":"Guide/priority","title":"Priorities","description":"As your repo gets more and more complex, you\'ll need to do some some profiling to understand bottlenecks. Sometimes, the package tasks are not queued in the order that will produce the most optimized run times.","sidebar":"tutorialSidebar"},"Guide/profile":{"id":"Guide/profile","title":"Profiling `lage`","description":"A particularly complex monorepo can present opporunities for optimization. For example, when there are really large packages, it might be more efficient to break those up so the build can be split across different CPU cores. lage greatly enhances the ability for developers to see where the bottlenecks are.","sidebar":"tutorialSidebar"},"Guide/README":{"id":"Guide/README","title":"Introducing Lage","description":"Overview","sidebar":"tutorialSidebar"},"Guide/remote-cache":{"id":"Guide/remote-cache","title":"Remote Cache","description":"As your repo grows in size and complexity, the build takes longer and longer even locally. lage elegantly provides an incremental build capability given a locally available cache. When we pair the caching capability of lage with a cloud storage provider, we can speed up local builds with remote cache made available by Continuous Integration, or CI, jobs.","sidebar":"tutorialSidebar"},"Guide/scopes":{"id":"Guide/scopes","title":"Scoped builds","description":"Scoping a task runner can speed up the process especially if there are distinct clusters of packages that are not related to each other within the repository. lage has a scope option that allows the task running to proceed up to the packages found that matches the scope argument. This is a string matcher based on the name of the packages (not the package path).","sidebar":"tutorialSidebar"},"Introducing Lage/Overview":{"id":"Introducing Lage/Overview","title":"Overview","description":"Overview","sidebar":"tutorialSidebar"}}}')}}]);